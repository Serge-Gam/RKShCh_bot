import pandas as pd
import utility
from storage import dict_months_links, dict_users
from constants import rus_days, rus_months



video_set = {'–ò–≥–æ—Ä—å', '–°–µ—Ä–≥–µ–π –ì–∞–º–∞–ª–∏–π','–ü–µ—Ç—Ä –¢–µ–Ω–µ—Ç–∫–æ','–°–µ—Ä–≥–µ–π –¢–∏–º–æ—à–µ–Ω–∫–æ','–í–∞–ª–µ–Ω—Ç–∏–Ω','–î–∏–º–∞ –í–æ–ª–æ–≥–¥–∏–Ω','–ù–∏–∫–æ–ª–∞–π'}

sound_set = {'–ê–ª–µ–∫—Å–µ–π –ö–æ—Å–∏–ª–æ–≤','–≠–¥–∏–∫','–°–≤–µ—Ç–ª–∞–Ω–∞','–î–µ–Ω–∏—Å','–¢–∞–º–∞—Ä–∞','–≠—Ä–∏–∫','–ê–ª–µ–∫—Å–µ–π –¢–∏—Ç–æ–≤','–î–º–∏—Ç—Ä–∏–π –ö–ª–∏–º–∫–∏–Ω','–í–ª–∞–¥–∏–º–∏—Ä','–ï–≥–æ—Ä','–ê–Ω—Ç–æ–Ω','–Ø—Å–∏–Ω','–î–∞–Ω—è –õ—É—Ç—Ü–µ–≤',}#–Ω–∞–¥–æ –±—É–¥–µ—Ç —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç—è–Ω—É—Ç—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –≥—É–≥–ª


def get_rasp_for_user(user_id):
    name = dict_users[user_id]['name']

    print('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è ' + str(name)) #–∫–æ–Ω—Ç—Ä–æ–ª—å
    month = dict_users[user_id]['month']
    link = dict_months_links[month]
    key = utility.get_key(link)
    print(key, name, month, link, sep=' ')


    df = pd.read_csv('https://docs.google.com/spreadsheets/d/' +
                       key +
                       '/export?gid=0&format=csv',
                       header = 1, index_col=0,
                      )
    Pd_series=df.loc[str(name)]  #—ç—Ç–æ —É–∂–µ series

    #–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–æ—Ç–∞ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
    message_rasp = ''
    # –≤—ã—Ç–∞—â–∏–º –º–µ—Å—è—Ü –∏–∑ –¥–∞—Ç—ã —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤ –¥–∞—Ç–∞—Ñ—Ä—ç–π–º–µ
    rus_month = rus_months[int(Pd_series.index[0][3:5])-1]
    message_rasp += (str(name)+" –≤–æ—Ç —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ " +'*'+ rus_month +'*' )
    message_rasp += ('\n============')

    # –≤ —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ö—Ä–∞–Ω–∏–º –∏–Ω–¥–µ–∫—Å –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç—á–µ—Ä—Ç–∏—Ç—å –ª–∏–Ω–∏–µ–π –∫–æ–Ω–µ—Ü –Ω–µ–¥–µ–ª–∏
    pred = 0

    #—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
    Days = range(Pd_series.shape[0])
    for day in Days:
        Weekday_pd_index = utility.get_weekday_number(Pd_series.index[day])
        Day_pd = Pd_series.index[day][:2]
        Weekday_rus = rus_days[Weekday_pd_index]
        if pred == 6: # 6 - —ç—Ç–æ –í—Å–∫ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –í—Å–∫ –ª–∏ —Å–µ–π—á–∞—Å —Å–ª—É—á–∞–π–Ω–æ
            message_rasp += ('\n----------------')

        if type(Pd_series[day]) == str:
            message_rasp += ('\n' + '*' + Weekday_rus + '*' + '\t' + '/'+Day_pd + '\t' + Pd_series[day])
        else:
            message_rasp += ('\n' + '*' + Weekday_rus + '*' + '\t' + '/'+Day_pd + '\t' + '   -')
        pred = Weekday_pd_index
        #–¥–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è if_today –≤–æ–∑–≤—Ä—è—â–∞–µ—Ç True
        if utility.event_is_today(Pd_series.index[day]):
            message_rasp += dict_users[user_id]['emoji']

    return message_rasp
#print(get_rasp_for_user('3261372')

def get_rasp_for_date(user_id, day='/01'):
    month = dict_users[user_id]['month']
    link = dict_months_links[month]
    key = utility.get_key(link)
    df = pd.read_csv('https://docs.google.com/spreadsheets/d/' +
                       key +
                       '/export?gid=0&format=csv',
                       header = 1, index_col=0,
                      )

    d = str(day.split('/')[1])

    m = dict_users[user_id]['month'].split('/')[0]  #–ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/18
    y = dict_users[user_id]['month'].split('/')[1]
    Pd_date = d +'.0'+ m +'.20'+ y
    PD_new = df[[Pd_date]]
    PD_series = PD_new[Pd_date]

    output ='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ *'+Pd_date+'*\n=======================\n'

    for i in range(PD_series.shape[0] - 1):
        name = PD_series.index[i]
        if dict_users[user_id]['team'] == 'video':
            some_set, emoji = video_set, 'üìπ'
        else:
            some_set, emoji = sound_set, 'üéô'

        if name in some_set:
            name = name + emoji

        if type(PD_series[i]) == str:
            event = PD_series[i]

        if i%2 == 0:
            row = '\n*üî∏'+ str(name )+ ':   ' + str(event) + '*\n'
        else:
            row = '\nüîπ'+str(name) + ':   ' + str(event) + '\n'
        output += row

    return output+'\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ *'+ Pd_date +'*\n=======================\n'

  #PD_series=df.loc[str(name)]  #—ç—Ç–æ —É–∂–µ series
