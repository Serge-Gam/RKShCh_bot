import pandas as pd
import parser_utility
from storage import dict_months_links, dict_users, video_set, sound_set
from constants import rus_days, rus_months

def make_rasp_for_user(user_id):
    name = dict_users[user_id]['user_name']
    df = parser_utility.get_dataframe(user_id)
    Pd_series=df.loc[str(name)]  #—ç—Ç–æ —É–∂–µ series

    output = ''
    # –≤—ã—Ç–∞—â–∏–º –º–µ—Å—è—Ü –∏–∑ –¥–∞—Ç—ã —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤ –¥–∞—Ç–∞—Ñ—Ä—ç–π–º–µ
    rus_month = rus_months[int(Pd_series.index[0][3:5])-1]
    output += (str(name)+" –≤–æ—Ç —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ " +'*'+ rus_month +'*' )
    output += ('\n============')

    # –≤ —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ö—Ä–∞–Ω–∏–º –∏–Ω–¥–µ–∫—Å –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç—á–µ—Ä—Ç–∏—Ç—å –ª–∏–Ω–∏–µ–π –∫–æ–Ω–µ—Ü –Ω–µ–¥–µ–ª–∏
    pred = 0

    #—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
    Days = range(Pd_series.shape[0])
    for day in Days:
        Weekday_pd_index = parser_utility.get_weekday_number(Pd_series.index[day])
        Day_pd = Pd_series.index[day][:2]
        Weekday_rus = rus_days[Weekday_pd_index]
        if pred == 6: # 6 - —ç—Ç–æ –í—Å–∫ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –í—Å–∫ –ª–∏ —Å–µ–π—á–∞—Å —Å–ª—É—á–∞–π–Ω–æ
            output += ('\n----------------')

        if type(Pd_series[day]) == str:
            output += ('\n' + '*' + Weekday_rus + '*' + '\t' + '/'+Day_pd + '\t' + Pd_series[day])
        else:
            output += ('\n' + '*' + Weekday_rus + '*' + '\t' + '/'+Day_pd + '\t' + '   -')
        pred = Weekday_pd_index
        #–¥–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è if_today –≤–æ–∑–≤—Ä—è—â–∞–µ—Ç True
        if parser_utility.event_is_today(Pd_series.index[day]):
            output += dict_users[user_id]['emoji']

    return output
#print(get_rasp_for_user('3261372')

def make_rasp_for_date(user_id, day='/01'):
    df = parser_utility.get_dataframe (user_id)
    d = str(day.split('/')[1])
    m = dict_users[user_id]['month'].split('/')[0]  #–ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01/18
    y = dict_users[user_id]['month'].split('/')[1]
    Pd_date = '.'.join([d,m,y])
    df_new = df[[Pd_date]]
    df_new = df_new.sort_values([Pd_date])
    PD_series = df_new[Pd_date]
    week_day = rus_days[parser_utility.get_weekday_number(Pd_date)]
    month_name_rus = rus_months[int(m)]
    #–ø—Ä–æ—Å–ø—Ä—è–≥–∞–µ–º –Ω–∞—à –º–µ—Å—è—Ü –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
    if month_name_rus == ('–ú–∞—Ä—Ç' or '–ê–≤–≥—É—Å—Ç'):
        month_name_rus = ''.join([month_name_rus[:-1],'–∞'])
    else: month_name_rus = ''.join([month_name_rus[:-1],'—è'])


    output = ' '.join(['*\n=======================\n',d,month_name_rus,week_day,Pd_date,'\n=======================\n*'])

    for i in range(PD_series.shape[0] - 1):
        name = PD_series.index[i]
        if dict_users[user_id]['team'] == 'video':
            some_set, emoji = video_set, 'üìπ'
        else:
            some_set, emoji = sound_set, 'üéô'

        if name in some_set:
            name = emoji + name

        if type(PD_series[i]) == str:
            event = PD_series[i]
        else:
            event = 'üè°'

        if i%2 == 0:
            row = '\n*'+ (str(event)).title() + ':   ' + str(name ) + '*\n'
        else:
            row = '\n'+ (str(event)).title()+ ':   ' + str(name)  + '\n'
        output += row
    last_row_index = PD_series.shape[0]-1
    kontramarki_title = PD_series.index[last_row_index]
    if PD_series[last_row_index] == str():
        kontramarki_info = PD_series[last_row_index]
    else:
        kontramarki_info = '-'
    output += ' '.join(['\nüìù',str(kontramarki_title),':   ',str(kontramarki_info)])
    output += ' '.join(['*\n=======================\n',d,month_name_rus,week_day,Pd_date,'\n=======================\n*'])
    return output
#print(get_rasp_for_date(3261372, '/02'))
